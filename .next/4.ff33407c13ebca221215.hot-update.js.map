{"version":3,"file":"4.ff33407c13ebca221215.hot-update.js","sources":["webpack:///game/SceneLevel.jsx"],"sourcesContent":["\nimport Emoji from '../components/Emoji'\nimport React from 'react'\nimport css from 'styled-jsx/css'\nimport { ALL_EMOTIONS, EMOTION_CONTENT, EMOTION_ANGRY, EMOTION_SAD, EMOTION_HAPPY, EMOTION_SUPRISED } from '../game'\n\nconst CSS = css`\n.level {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 100%;\n    height: 100%;\n}\n\n.level .emoji {\n    position: absolute;\n    font-size: 60px;\n}\n`\n\nconst _DefaultState = {\n    emojis: []\n}\n\nclass SceneLevel extends React.Component {\n    constructor() {\n        super()\n\n        this.state = _DefaultState\n    }\n\n    componentDidMount() {\n        this._setLevel(this.props.level)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.level != this.props.level) {\n            this._setLevel(this.props.level)\n        }\n\n        if (this.props.lastInputEmotion !== prevProps.lastInputEmotion) {\n            this._killAllEmojis(this, this.props.lastInputEmotion)\n        }\n    }\n\n    renderEmoji(e, i) {\n        return (\n            <Emoji key={i}\n                   emotion={e.emotion}\n                   dead={e.dead}\n                   style={{\n                        left: e.x + 'vw',\n                        top: e.y + 'vh',\n                    }}\n            />\n        )\n    }\n\n    render () {\n        return (\n            <div className=\"level\">\n                <style global jsx>{CSS}</style>\n\n                {this.state.emojis.map(this.renderEmoji.bind(this))}\n            </div>\n        )\n    }\n\n    _setLevel(levelNo) {\n        this._killAllEmojis()\n        if (levelNo === 1) {\n            this._generateEmojis(10)\n        }\n        else if (levelNo === 2) {\n            this._generateEmojis(20)\n        }\n    }\n\n    _generateEmojis(count) {\n        let emojis = [...this.state.emojis]\n        for (var i = 0; i < count; ++i) {\n            emojis.push(this._newEmoji())\n        }\n        this.setState({\n            emojis: emojis\n        })\n    }\n\n    _newEmoji() {\n        return {\n            emotion: this._randomEmotion(),\n            x: -30 + Math.random() * 60,\n            y: -30 + Math.random() * 60,\n        }\n    }\n\n    _killAllEmojis(type = '') {\n        let emojis = [this.state.emojis]\n        if (type = '') {\n            emojis = emojis.map(this._killEmoji.bind(this))\n        }\n        else {\n            // Kill specific type\n            emojis = emojis.map(e => {\n                if (e.emotion == emotionToKill) {\n                    return this._killEmoji(e)\n                }\n                return e\n            })\n        }\n        \n        this.setState({\n            emojis\n        })\n    }\n\n    _killEmoji(emoji) {\n        return {\n            ...emoji,\n            dead: true\n        }\n    }\n\n    _randomEmotion() {\n        return ALL_EMOTIONS[Math.floor(Math.random() * ALL_EMOTIONS.length)]\n    }\n}\n\nexport default SceneLevel\n\n\n// WEBPACK FOOTER //\n// game/SceneLevel.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AAEA;;;;AAeA;AACA;AADA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AAEA;AAFA;AAIA;;;AAEA;AACA;AACA;;;;;;;;;AArGA;AACA;AAuGA;AAAA;;;;;;;;;;;;AA3HA;AAeA;AAIA;;;;;;;;;;A","sourceRoot":""}