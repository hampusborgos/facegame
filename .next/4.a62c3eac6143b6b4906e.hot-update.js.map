{"version":3,"file":"4.a62c3eac6143b6b4906e.hot-update.js","sources":["webpack:///components/LevelProgressBar.jsx"],"sourcesContent":["import css from 'styled-jsx/css'\nimport React from 'react'\n\nconst CSS = css`\n.level-progress-bar {\n    position: relative;\n    width: 100vw;\n    height: 5vh;\n    background: linear-gradient(to right, #CDD180, #529B88);\n}\n\n.meter {\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 5vh;\n    width: 100vw;\n    background: linear-gradient(to right, yellow, red);\n    transition: left 0.2s linear, opacity 0.4s ease-in-out;\n}\n\n.meter.hidden {\n    opacity: 0;\n}\n\np {\n    position: absolute;\n    left: 2vh;\n    top: 0;\n    line-height: 5vh;\n    margin-top: 0;\n    font-size: 2vh;\n    font-weight: 400;\n    color: white;\n}\n`\n\n\nclass LevelProgressBar extends React.Component\n{\n    render() {\n        const {secondsLeft, secondsTotal} = this.props\n\n        const progress = secondsLeft / secondsTotal * 100\n\n        return (\n            <div className=\"level-progress-bar\">\n                <style jsx>{CSS}</style>\n\n                {secondsLeft !== null ?\n                    [\n                        <div key={1} className=\"meter\" style={{left: '-' + progress + 'vw'}}/>,\n                        <p key={2}>{secondsLeft.toFixed(0)} seconds remaining</p>,\n                    ]\n                : null}\n            </div>\n        )\n    }\n}\n\nexport default LevelProgressBar\n\n\n// WEBPACK FOOTER //\n// components/LevelProgressBar.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;;AAmCA;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;AAnBA;AACA;AAqBA;AAAA;;;;;;;;;;;;AAzDA;AAmCA;;;;;;;;;;A","sourceRoot":""}